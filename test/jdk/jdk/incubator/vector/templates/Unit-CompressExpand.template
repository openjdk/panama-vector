
    @Test(dataProvider = "$type$UnaryOpMaskProvider")
    static void [[TEST]]Masked$vectorteststype$(IntFunction<$type$[]> fa,
                                                IntFunction<boolean[]> fm) {
        $type$[] a = fa.apply(SPECIES.length());
        $type$[] r = fr.apply(SPECIES.length());
        boolean[] mask = fm.apply(SPECIES.length());
        VectorMask<$Wideboxtype$> vmask = VectorMask.fromArray(SPECIES, mask, 0);

        for (int ic = 0; ic < INVOC_COUNT; ic++) {
            for (int i = 0; i < a.length; i += SPECIES.length()) {
                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);
                av.[[TEST]](vmask).intoArray(r, i);
            }
        }

        assert[[TEST]]ArraysEquals(r, a, mask, SPECIES.length());
    }


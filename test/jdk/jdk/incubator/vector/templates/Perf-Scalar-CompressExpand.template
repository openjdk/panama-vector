
    @Benchmark
    public void compressScalar[[TEST_TYPE]][[OP_NAME]](Blackhole bh) {
        $type$[] as = fa.apply(size);
        $type$[] rs = new $type$[size];
        boolean[] im = fmt.apply(size);

        for (int ic = 0; ic < INVOC_COUNT; ic++) {
            for (int i = 0, j = 0; i < as.length; i++) {
                if (im[i]) {
                    rs[j++] = as[i];
                }
            }
        }

        bh.consume(rs);
    }

    @Benchmark
    public void expandScalar[[TEST_TYPE]][[OP_NAME]](Blackhole bh) {
        $type$[] as = fa.apply(size);
        $type$[] rs = new $type$[size];
        boolean[] im = fmt.apply(size);

        for (int ic = 0; ic < INVOC_COUNT; ic++) {
            for (int i = 0, j = 0; i < as.length; i++) {
                if (im[i]) {
                    rs[i++] = as[j++];
                }
            }
        }

        bh.consume(rs);
    }

    @Benchmark
    public void maskCompressScalar[[TEST_TYPE]][[OP_NAME]](Blackhole bh) {
        boolean[] im = fmt.apply(size);
        boolean[] rm = new boolean[size];

        for (int ic = 0; ic < INVOC_COUNT; ic++) {
            for (int i = 0, j = 0; i < im.length; i++) {
                if (im[i]) {
                    rm[j++] = im[i];
                }
            }
        }

        bh.consume(rm);
    }
